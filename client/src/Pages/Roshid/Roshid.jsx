import { useEffect, useState } from 'react';
import { toast } from 'react-hot-toast';
import { useAuthContext } from '../../Context/AuthContext';
import Marquee from 'react-fast-marquee';
const Roshid = () => {
    const { refresh , setRefresh, balance  } = useAuthContext();
    const [Balance, setBalance] = useState({});
    useEffect(() => {
        const fetchBalance = async () => {
          try {
            const response = await fetch('/api/balance');
            const data = await response.json();
            setBalance(data);
            
          } catch (error) {
            console.error('Error fetching balance:', error.message);
          }
        };
        fetchBalance();
      }, []);
    const [formData, setFormData] = useState({
        bangladeshFormNo: '',
        attachment: '',
        serialNumber: '',
        paragraphNumber: '',
        landOfficeName: '',
        mouzaJLNo: '',
        upazilaThana: '',
        district: '',
        ownerName: '',
        ownerShare: '',
        landCategory: '',
        landArea: '',
        plotNo: '',
        khatianNo: '',
        holdingNumber: '',
        arrearLastThreeYears: '',
        arrearPastThreeYears: '',
        interestAndCompensation: '',
        currentClaim: '',
        totalClaim: '',
        totalCollection: '',
        totalArrear: '',
        totalInWords: '',
        noteBl: '',
        challanNo: '',
        dateBangla: '',
        dateEnglish: '',
        category: 'roshid'
    });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({
            ...formData,
            [name]: value
        });
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        if (balance < Balance.roshidBalance) {
            toast.error('Insufficient balance!');
        }
        else{
            fetch('/api/apply/order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData),
            })
                .then((response) => response.json())
                .then((data) => {
                    fetch('/api/users/update-balance-roshid', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        
                    })
                        .then((response) => response.json())
                        .then((data) => {
                            console.log('Success:', data);
                            toast.success('Order placed successfully!');
                            setRefresh(!refresh);
                        })
                        .catch((error) => {
                            console.error('Error:', error);
                            toast.error('Something went wrong!');
                        });
                })
                .catch((error) => {
                    console.error('Error:', error);
                    toast.error('Something went wrong!');
            });
        }

    };

    return (
        <div className="container mx-auto p-4">
            <h2 className="text-xl font-bold mb-4">‡¶∞‡¶∂‡¶ø‡¶¶ Form</h2>
                <Marquee>
                <h2 className="text-xl font-bold mb-4">üí¢‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶•‡ßá‡¶ï‡ßá {Balance.roshidBalance}tk ‡¶ï‡ßá‡¶ü‡ßá ‡¶®‡ßá‡ßü‡¶æ ‡¶π‡¶¨‡ßá ‡•§üí¢</h2>
                </Marquee>
            <form onSubmit={handleSubmit} className=" w-full mx-auto">
                {/* General Information */}

                <div className='grid gap-10 grid-cols-1 md:grid-cols-1 lg:grid-cols-2'>
                    <div>
                        <h2 className="text-lg font-bold mb-2">‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶§‡¶•‡ßç‡¶Ø (General Information):</h2>
                        <div className="mb-4">
                            <label htmlFor="bangladeshFormNo" className="block mb-1">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶´‡¶∞‡¶Æ ‡¶®‡¶Ç</label>
                            <input type="text" id="bangladeshFormNo" name="bangladeshFormNo" value={formData.bangladeshFormNo} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="attachment" className="block mb-1">‡¶™‡¶∞‡¶ø‡¶∂‡¶ø‡¶∑‡ßç‡¶ü (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="attachment" name="attachment" value={formData.attachment} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="serialNumber" className="block mb-1">‡¶ï‡ßç‡¶∞‡¶Æ‡¶ø‡¶ï ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="serialNumber" name="serialNumber" value={formData.serialNumber} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="paragraphNumber" className="block mb-1">‡¶Ö‡¶®‡ßÅ‡¶ö‡ßç‡¶õ‡ßá‡¶¶ ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="paragraphNumber" name="paragraphNumber" value={formData.paragraphNumber} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="landOfficeName" className="block mb-1">‡¶≠‡ßÇ‡¶Æ‡¶ø ‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="landOfficeName" name="landOfficeName" value={formData.landOfficeName} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="mouzaJLNo" className="block mb-1">‡¶Æ‡ßå‡¶ú‡¶æ‡¶∞ ‡¶ú‡ßá. ‡¶è‡¶≤. ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="mouzaJLNo" name="mouzaJLNo" value={formData.mouzaJLNo} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="upazilaThana" className="block mb-1">‡¶â‡¶™‡ßá‡¶ú‡¶≤‡¶æ / ‡¶•‡¶æ‡¶®‡¶æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="upazilaThana" name="upazilaThana" value={formData.upazilaThana} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="district" className="block mb-1">‡¶ú‡ßá‡¶≤‡¶æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="district" name="district" value={formData.district} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                    </div>
                    <div>
                        <h2 className="text-lg font-bold mb-2">‡¶Ü‡¶¶‡¶æ‡ßü‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ (Payment Details):</h2>
                        <div className="mb-4">
                            <label htmlFor="arrearLastThreeYears" className="block mb-1">‡¶§‡¶ø‡¶® ‡¶¨‡ßé‡¶∏‡¶∞‡ßá‡¶∞ ‡¶ä‡¶∞‡ßç‡¶ß‡ßç‡¶¨‡ßá‡¶∞ ‡¶¨‡¶ï‡ßá‡ßü‡¶æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="arrearLastThreeYears" name="arrearLastThreeYears" value={formData.arrearLastThreeYears} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="arrearPastThreeYears" className="block mb-1">‡¶ó‡¶§ ‡¶§‡¶ø‡¶® ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ï‡ßá‡ßü‡¶æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="arrearPastThreeYears" name="arrearPastThreeYears" value={formData.arrearPastThreeYears} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="interestAndCompensation" className="block mb-1">‡¶¨‡¶ï‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¶ ‡¶ì ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶™‡ßÇ‡¶∞‡¶£ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="interestAndCompensation" name="interestAndCompensation" value={formData.interestAndCompensation} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="currentClaim" className="block mb-1">‡¶π‡¶æ‡¶≤ ‡¶¶‡¶æ‡¶¨‡¶ø (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="currentClaim" name="currentClaim" value={formData.currentClaim} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="totalClaim" className="block mb-1">‡¶Æ‡ßã‡¶ü ‡¶¶‡¶æ‡¶¨‡¶ø (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="totalClaim" name="totalClaim" value={formData.totalClaim} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="totalCollection" className="block mb-1">‡¶Æ‡ßã‡¶ü ‡¶Ü‡¶¶‡¶æ‡ßü (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="totalCollection" name="totalCollection" value={formData.totalCollection} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="totalArrear" className="block mb-1">‡¶Æ‡ßã‡¶ü ‡¶¨‡¶ï‡ßá‡ßü‡¶æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="totalArrear" name="totalArrear" value={formData.totalArrear} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="totalInWords" className="block mb-1">‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü (‡¶ï‡¶•‡¶æ‡¶Ø‡¶º) (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="totalInWords" name="totalInWords" value={formData.totalInWords} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                    </div>
                    
                    <div>
                        <h2 className="text-lg font-bold mb-2">‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ (Land Details):</h2>
                        <div className="mb-4">
                            <label htmlFor="landCategory" className="block mb-1">‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <textarea type="text" id="landCategory" name="landCategory" value={formData.landCategory} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="landArea" className="block mb-1">‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <textarea placeholder='‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶®[‡ß¶.‡ß¶‡ß¶‡ß¶‡ß¶‡ß¶ ‡¶è‡¶á ‡¶´‡¶∞‡¶Æ‡ßá‡¶ü ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá ‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶® ‡¶¶‡¶ø‡¶¨‡ßá‡¶®, ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶® ‡ßß ‡¶∂‡¶§‡¶ï ‡¶π‡¶≤‡ßá ‡ßß.‡ß¶‡ß¶‡ß¶‡ß¶‡ß¶]' type="text" id="landArea" name="landArea" value={formData.landArea} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="plotNo" className="block mb-1">‡¶¶‡¶æ‡¶ó ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <textarea type="text" id="plotNo" name="plotNo" value={formData.plotNo} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="khatianNo" className="block mb-1">‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶® ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="khatianNo" name="khatianNo" value={formData.khatianNo} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="holdingNumber" className="block mb-1">‡ß® ‡¶®‡¶Ç ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶π‡ßã‡¶≤‡ßç‡¶°‡¶ø‡¶Ç ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞</label>
                            <input type="text" id="holdingNumber" name="holdingNumber" value={formData.holdingNumber} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                    </div>

                    <div>
                        <h2 className="text-lg font-bold mb-2">‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ (Additional):</h2>
                        <div className="mb-4">
                            <label htmlFor="noteBl" className="block mb-1">‡¶®‡ßã‡¶ü (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="noteBl" name="noteBl" value={formData.noteBl} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="challanNo" className="block mb-1">‡¶ö‡¶æ‡¶≤‡¶æ‡¶® ‡¶®‡¶Ç (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="challanNo" name="challanNo" value={formData.challanNo} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="dateBangla" className="block mb-1">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ) (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <input type="text" id="dateBangla" name="dateBangla" value={formData.dateBangla} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="dateEnglish" className="block mb-1">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ (‡¶á‡¶Ç‡¶≤‡¶ø‡¶∂)</label>
                            <input type="text" id="dateEnglish" name="dateEnglish" value={formData.dateEnglish} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                    </div>
                    <div>
                        <h2 className="text-lg font-bold mb-2">‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ (Owner's Details):</h2>
                        <div className="mb-4">
                            <label htmlFor="ownerName" className="block mb-1">‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <textarea type="text" id="ownerName" name="ownerName" value={formData.ownerName} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                        <div className="mb-4">
                            <label htmlFor="ownerShare" className="block mb-1">‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂ (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü)</label>
                            <textarea type="text" id="ownerShare" name="ownerShare" value={formData.ownerShare} onChange={handleChange} className="w-full border rounded px-2 py-1" />
                        </div>
                    </div>
                </div>

                <div className="text-center">
                    <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Submit</button>
                </div>
            </form>
        </div>
    );
};

export default Roshid;
